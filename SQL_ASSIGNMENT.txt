SQL ASSIGNMENT 1

CREATE DATABASE MY_PROJECTS;
USE MY_PROJECTS;

--TASK 1-- 
--CREATING SHOPPING HISTORY TABLE--
CREATE TABLE SHOPPING_HISTORY(PRODUCT VARCHAR(20) NOT NULL, QUANTITY INTEGER, UNIT_PRICE INTEGER);
--INSERTING DATA--
INSERT INTO SHOPPING_HISTORY VALUES('MILK', 3, 50);
INSERT INTO SHOPPING_HISTORY VALUES('BREAD', 1, 10);
INSERT INTO SHOPPING_HISTORY VALUES('MILK', 1, 40);
INSERT INTO SHOPPING_HISTORY VALUES('BUTTER', 1, 30);
INSERT INTO SHOPPING_HISTORY VALUES('PASTERY', 2, 90);
INSERT INTO SHOPPING_HISTORY VALUES('VEG PUFF', 3, 70);
INSERT INTO SHOPPING_HISTORY VALUES('CHOCOLATE', 10, 20);
INSERT INTO SHOPPING_HISTORY VALUES('BREAD', 2, 20);
INSERT INTO SHOPPING_HISTORY VALUES('BUTTER', 2, 40);
INSERT INTO SHOPPING_HISTORY VALUES('CHOCOLATE', 1, 120);

SELECT * FROM SHOPPING_HISTORY;
--TOTAL AMOUNT OF MONEY SPENT ON EACH PRODUCT--
SELECT PRODUCT, SUM(QUANTITY*UNIT_PRICE) AS TOTAL_PRICE FROM SHOPPING_HISTORY GROUP BY PRODUCT ORDER BY PRODUCT DESC;


--TASK 2--
CREATE TABLE PHONE(NAME VARCHAR(20) NOT NULL UNIQUE, PHONE_NUMBER INTEGER NOT NULL UNIQUE);
CREATE TABLE CALLS(ID INTEGER NOT NULL, CALLER INTEGER NOT NULL, CALLEE INTEGER NOT NULL, DURATION INTEGER NOT NULL);

INSERT INTO PHONE VALUES('SUKHMAN',1234);
INSERT INTO PHONE VALUES('SONAL',3333);
INSERT INTO PHONE VALUES('SIMRAN',9999);
INSERT INTO PHONE VALUES('SHINY',7852);

INSERT INTO CALLS VALUES(25,1234,7852,8);
INSERT INTO CALLS VALUES(7,9999,7852,1);
INSERT INTO CALLS VALUES(18,9999,3333,4);
INSERT INTO CALLS VALUES(2,7852,3333,3);
INSERT INTO CALLS VALUES(3,3333,1234,1);
INSERT INTO CALLS VALUES(21,3333,1234,1);

--NAMES OF CUSTOMERS WHO'S CALL DURATION IS GREATER THAN OR EQUAL TO 10 MINS
WITH PHONY AS
(
  SELECT CALLER AS PHONE_NUMBER, SUM(DURATION) AS DURATION FROM CALLS GROUP BY CALLER
  UNION
  SELECT CALLEE AS PHONE_NUMBER, SUM(DURATION) AS DURATION FROM CALLS GROUP BY CALLEE
)
SELECT NAME FROM PHONE JOIN PHONY ON(PHONE.PHONE_NUMBER = PHONY.PHONE_NUMBER) GROUP BY NAME HAVING SUM(DURATION)>=10;

--TASK 3--
CREATE TABLE TRANSACTIONS(AMOUNT INTEGER NOT NULL, `DATE`  DATE NOT NULL);

INSERT INTO TRANSACTIONS VALUES(1000 ,'2020-01-06');
INSERT INTO TRANSACTIONS VALUES(-10 ,'2020-01-14');
INSERT INTO TRANSACTIONS VALUES(-75 ,'2020-01-20');
INSERT INTO TRANSACTIONS VALUES(-5 ,'2020-01-25');
INSERT INTO TRANSACTIONS VALUES(-4 ,'2020-01-29');
INSERT INTO TRANSACTIONS VALUES(2000 ,'2020-03-10');
INSERT INTO TRANSACTIONS VALUES(-75 ,'2020-03-12');
INSERT INTO TRANSACTIONS VALUES(-20 ,'2020-03-15');
INSERT INTO TRANSACTIONS VALUES(40 ,'2020-03-17');
INSERT INTO TRANSACTIONS VALUES(-50 ,'2020-10-10');
INSERT INTO TRANSACTIONS VALUES(200 ,'2020-10-10');
INSERT INTO TRANSACTIONS VALUES(-200 ,'2020-10-10');

WITH CTE_0 AS (SELECT SUM(AMOUNT) AS WIHOUT_CREDIT_FEE FROM TRANSACTIONS),
--SUM OF AMOUNT WHERE CREDIT CARD PAYMENT IS DONE GROUPED BY MONTHS
CTE_1 AS(SELECT SUM(AMOUNT) AS CREDIT_PAYMENT, MONTH(`DATE`) AS MONTH_NAME FROM TRANSACTIONS WHERE AMOUNT<0 GROUP BY MONTH(`DATE`)),
--NUMBER OF MONTHS FOR WHICH CREDIT CARD PAYMENT EXCEEDS 100
CTE_2 AS (SELECT COUNT(MONTH_NAME) AS N FROM CTE_1 WHERE CREDIT_PAYMENT<=-100)
SELECT (CTE_0.WIHOUT_CREDIT_FEE - 5*(12-CTE_2.N))  AS TOTAL_AMOUNT FROM CTE_0, CTE_2;


